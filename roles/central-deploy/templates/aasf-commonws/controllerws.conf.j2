# -----------------------------------------------------------------------------------
# CSI Controller WS Configurations
# Number values should not be followed by any blank space.
# -----------------------------------------------------------------------------------

# -----------------------------------------------------
# Controller
# -----------------------------------------------------
csf.controller.control-topic-in={{ cen_controllerws_csf_controller_control_topic_in }}
csf.controller.control-topic-out={{ cen_controllerws_csf_controller_control_topic_out }}

# -----------------------------------------------------
# Control Proxy
# -----------------------------------------------------
csf.controlproxy.control-topic-in={{ cen_controllerws_csf_controlproxy_control_topic_in }}
csf.controlproxy.control-topic-out={{ cen_controllerws_csf_controlproxy_control_topic_out }}

# -----------------------------------------------------
# Postgres Database Configurations
# -----------------------------------------------------
rdbms.url={{ cen_controllerws_rdbms_url }}
rdbms.username={{ cen_controllerws_rdbms_username }}
rdbms.password={{ cen_controllerws_rdbms_password }}
rdbms.driver={{ cen_controllerws_rdbms_driver }}

########################################################################################################
## kafka.dot.nine.properties
########################################################################################################
#bootstrap.servers={{ cen_controllerws_bootstrap_servers }}
bootstrap.servers={% for kafka_server_ip in groups['kafka-servers'] %}{{kafka_server_ip}}:{{ hostvars[kafka_server_ip]['kafka_port']}}{% if not loop.last %},{% endif %}{% endfor %}
#zookeeper.connect={{ cen_controllerws_zookeeper_connect }}
zookeeper.connect={% for zk_server_ip in groups['zookeeper-servers'] %}{{zk_server_ip}}:{{ hostvars[zk_server_ip]['zookeeper_srv_port']}}{% if not loop.last %},{% endif %}{% endfor %}

acks={{ cen_controllerws_acks }}
retries={{ cen_controllerws_retries }}
batch.size={{ cen_controllerws_batch_size }}
linger.ms={{ cen_controllerws_linger_ms }}
buffer.memory={{ cen_controllerws_buffer_memory }}
key.serializer={{ cen_controllerws_key_serializer }}
value.serializer={{ cen_controllerws_value_serializer }}
